df <- data.frame(mat)
rownames(df) <- c("0.85","0.5","0.15")
colnames(df) <- c("Low","High")
df2 <- df %>% mutate(fixRewards = df$Low + df$High) %>% select(fixRewards) %>% rownames_to_column() %>% gather(fixedRewards, value, -rowname)
head(df2)
df2$value <- df2$value - 1/nrow(df2)
print(df2)
#Alternative frequency plot
plotFig <- ggplot(df2, aes(x=rowname, y=value, fill=colname)) +
stat_summary(fun.y = mean, geom='bar', position =  position_dodge(width=0.8),alpha = 0.8, color = 'black', width = 0.8) +
#stat_summary(fun.data = mean_se, geom= 'errorbar', color = 'black', width = .2, position =  position_dodge(width=0.8))+
theme_classic()+
#facet_wrap(~Conditions, nrow =1)+
xlab("p(stim)")+
geom_hline(yintercept = 0,linetype=1)+
ylab("p(choice)-p(chance)")+
ggtitle(name)+
scale_fill_manual(values =c("#E69F00", "#009E73"), name = '')+
scale_color_manual(values =c("#E69F00", "#009E73"), name = '')+
theme(legend.justification = c(1, 1), legend.box.margin=margin(c(0,0,0,0)),
legend.position = "none",#c(1, 1.1),
legend.key.height = unit(0.3, 'cm'),legend.key.width = unit(0.3, 'cm'),
legend.background=element_blank(), strip.background = element_blank(),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16)#, legend.title = "Reward level",
)
plotFig
return(plotFig)
}
g1 <- table2df(highOmega.Freq, "High Omega")
g2 <- table2df(highTheta.Freq, "High Theta")
grid.arrange(g1,g2,ncol=2)
#Alternative frequency plot
plotFig <- ggplot(df2, aes(x=rowname, y=value)) +
stat_summary(fun.y = mean, geom='bar', position =  position_dodge(width=0.8),alpha = 0.8, color = 'black', width = 0.8) +
#stat_summary(fun.data = mean_se, geom= 'errorbar', color = 'black', width = .2, position =  position_dodge(width=0.8))+
theme_classic()+
#facet_wrap(~Conditions, nrow =1)+
xlab("p(stim)")+
geom_hline(yintercept = 0,linetype=1)+
ylab("p(choice)-p(chance)")+
ggtitle(name)+
scale_fill_manual(values =c("#E69F00", "#009E73"), name = '')+
scale_color_manual(values =c("#E69F00", "#009E73"), name = '')+
theme(legend.justification = c(1, 1), legend.box.margin=margin(c(0,0,0,0)),
legend.position = "none",#c(1, 1.1),
legend.key.height = unit(0.3, 'cm'),legend.key.width = unit(0.3, 'cm'),
legend.background=element_blank(), strip.background = element_blank(),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16)#, legend.title = "Reward level",
)
plotFig
table2df <- function(table,name){
mat <- matrix(NA, nrow = 3, ncol = 2)
#row if stim, col is reward
mat[3,1] <- table[1]
mat[3,2] <- table[2]
mat[2,1] <- table[3]
mat[2,2] <- table[4]
mat[1,1] <- table[5]
mat[1,2] <- table[6]
df <- data.frame(mat)
rownames(df) <- c("0.85","0.5","0.15")
colnames(df) <- c("Low","High")
df2 <- df %>% mutate(fixRewards = df$Low + df$High) %>% select(fixRewards) %>% rownames_to_column() %>% gather(fixedRewards, value, -rowname)
head(df2)
df2$value <- df2$value - 1/nrow(df2)
print(df2)
#Alternative frequency plot
plotFig <- ggplot(df2, aes(x=rowname, y=value)) +
stat_summary(fun.y = mean, geom='bar', position =  position_dodge(width=0.8),alpha = 0.8, color = 'black', width = 0.8) +
#stat_summary(fun.data = mean_se, geom= 'errorbar', color = 'black', width = .2, position =  position_dodge(width=0.8))+
theme_classic()+
#facet_wrap(~Conditions, nrow =1)+
xlab("p(stim)")+
geom_hline(yintercept = 0,linetype=1)+
ylab("p(choice)-p(chance)")+
ggtitle(name)+
scale_fill_manual(values =c("#E69F00", "#009E73"), name = '')+
scale_color_manual(values =c("#E69F00", "#009E73"), name = '')+
theme(legend.justification = c(1, 1), legend.box.margin=margin(c(0,0,0,0)),
legend.position = "none",#c(1, 1.1),
legend.key.height = unit(0.3, 'cm'),legend.key.width = unit(0.3, 'cm'),
legend.background=element_blank(), strip.background = element_blank(),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16)#, legend.title = "Reward level",
)
plotFig
return(plotFig)
}
g1 <- table2df(highOmega.Freq, "High Omega")
g2 <- table2df(highTheta.Freq, "High Theta")
grid.arrange(g1,g2,ncol=2)
#From full model params, index high low theta/omega
lowTheta <- param.simTheta$theta < quantile(param.simTheta$theta,.25)
highTheta <- param.simTheta$theta > quantile(param.simTheta$theta,.75)#median(param.simFull$theta)
lowOmega <- param.simOmega$omega < quantile(param.simOmega$omega,.25)
highOmega <- param.simOmega$omega > quantile(param.simOmega$omega,.75)#median(param.simOmega$omega)
lowTheta.Freq <- prop.table(table(choice.Theta[lowTheta,,]))
highTheta.Freq <- prop.table(table(choice.Theta[highTheta,,]))
lowOmega.Freq <- prop.table(table(choice.Omega[lowOmega,,]))
highOmega.Freq <- prop.table(table(choice.Omega[highOmega,,]))
plotFreq <- function(table,name){
mat <- matrix(NA, nrow = 3, ncol = 2)
#row if stim, col is reward
mat[3,1] <- table[1]
mat[3,2] <- table[2]
mat[2,1] <- table[3]
mat[2,2] <- table[4]
mat[1,1] <- table[5]
mat[1,2] <- table[6]
df <- data.frame(mat)
rownames(df) <- c("0.85","0.5","0.15")
colnames(df) <- c("Low","High")
df2 <- df %>% rownames_to_column() %>% gather(colname, value, -rowname)
head(df2)
plotFig <- ggplot(df2, aes(x = rowname, y = colname, fill = value)) +
geom_tile(color = "black") +
geom_text(aes(label = round(value,3)), color = "green", size = 4) +
labs(title=name,x="Stimulation Probabilities", y = "Reward Level") +
scale_fill_viridis_c(option="magma",guide = "none") +
coord_fixed()
return(plotFig)
}
f1 <- plotFreq(optimal.Freq,"No Sensory Bias")
f2 <- plotFreq(lowOmega.Freq,"Low Omega")
f3 <- plotFreq(highOmega.Freq,"High Omega")
f4 <- plotFreq(lowTheta.Freq,"Low Theta")
f5 <- plotFreq(highTheta.Freq,"High Theta")
gt <- arrangeGrob(f1,f2,f3,f4,f5,
ncol = 3, nrow = 2,
layout_matrix = rbind(c(1,2,3),
c(1,4,5))
)
as_ggplot(gt)
table2df <- function(table,name){
mat <- matrix(NA, nrow = 3, ncol = 2)
#row if stim, col is reward
mat[3,1] <- table[1]
mat[3,2] <- table[2]
mat[2,1] <- table[3]
mat[2,2] <- table[4]
mat[1,1] <- table[5]
mat[1,2] <- table[6]
df <- data.frame(mat)
rownames(df) <- c("0.85","0.5","0.15")
colnames(df) <- c("Low","High")
df2 <- df %>% mutate(fixRewards = df$Low + df$High) %>% select(fixRewards) %>% rownames_to_column() %>% gather(fixedRewards, value, -rowname)
head(df2)
df2$value <- df2$value - 1/nrow(df2)
print(df2)
#Alternative frequency plot
plotFig <- ggplot(df2, aes(x=rowname, y=value)) +
stat_summary(fun.y = mean, geom='bar', position =  position_dodge(width=0.8),alpha = 0.8, color = 'black', width = 0.8) +
#stat_summary(fun.data = mean_se, geom= 'errorbar', color = 'black', width = .2, position =  position_dodge(width=0.8))+
theme_classic()+
#facet_wrap(~Conditions, nrow =1)+
xlab("p(stim)")+
geom_hline(yintercept = 0,linetype=1)+
ylab("p(choice)-p(chance)")+
ggtitle(name)+
scale_fill_manual(values =c("#E69F00", "#009E73"), name = '')+
scale_color_manual(values =c("#E69F00", "#009E73"), name = '')+
theme(legend.justification = c(1, 1), legend.box.margin=margin(c(0,0,0,0)),
legend.position = "none",#c(1, 1.1),
legend.key.height = unit(0.3, 'cm'),legend.key.width = unit(0.3, 'cm'),
legend.background=element_blank(), strip.background = element_blank(),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16)#, legend.title = "Reward level",
)
plotFig
return(plotFig)
}
g1 <- table2df(highOmega.Freq, "High Omega")
g1 <- table2df(lowOmega.Freq, "Low Omega")
g2 <- table2df(highOmega.Freq, "High Omega")
g3 <- table2df(lowTheta.Freq, "Low Theta")
g4 <- table2df(highTheta.Freq, "High Theta")
grid.arrange(g1,g2,g3,g4,ncol=4)
#Alternative frequency plot
ggplot(dfreq, aes(x=rowname, y=value, fill=colname)) +
stat_summary(fun.y = mean, geom='bar', position =  position_dodge(width=0.8),alpha = 0.8, color = '#40B0A6', width = 0.8) +
#stat_summary(fun.data = mean_se, geom= 'errorbar', color = 'black', width = .2, position =  position_dodge(width=0.8))+
theme_classic()+
facet_wrap(~Conditions, nrow =1)+
xlab("Arms")+
geom_hline(yintercept = 0,linetype=1)+
ylab("p(choice)-p(chance)")+
ggtitle('Arm frequency')+
#scale_fill_manual(values =c("#E69F00", "#009E73"), name = '')+
#scale_color_manual(values =c("#E69F00", "#009E73"), name = '')+
theme(legend.justification = c(1, 1), legend.position = c(1, 1.1), legend.box.margin=margin(c(0,0,0,0)),
legend.key.height = unit(0.3, 'cm'),legend.key.width = unit(0.3, 'cm'),
legend.background=element_blank(), strip.background = element_blank(), legend.title = element_blank())
#Alternative frequency plot
ggplot(dfreq, aes(x=rowname, y=value, fill=colname)) +
stat_summary(fun.y = mean, geom='bar', position =  position_dodge(width=0.8),alpha = 0.8, color = '#40B0A6', width = 0.8) +
#stat_summary(fun.data = mean_se, geom= 'errorbar', color = 'black', width = .2, position =  position_dodge(width=0.8))+
theme_classic()+
facet_wrap(~Conditions, nrow =1)+
xlab("Arms")+
geom_hline(yintercept = 0,linetype=1)+
ylab("p(choice)-p(chance)")+
ggtitle('Arm frequency')+
#scale_fill_manual(values =c("#E69F00", "#009E73"), name = '')+
#scale_color_manual(values =c("#E69F00", "#009E73"), name = '')+
theme(legend.justification = c(1, 1), legend.position = c(1, 1.1), legend.box.margin=margin(c(0,0,0,0)),
legend.key.height = unit(0.3, 'cm'),legend.key.width = unit(0.3, 'cm'),
legend.background=element_blank(), strip.background = element_blank(), legend.title = element_blank())
plotLearnCurve <- function(data,name){
LearnCurves <- data.frame(data)
LearnCurves$Trial <- 1:nrow(data)
LearnCurves.long <- gather(LearnCurves, Bandit, Reward, X1:X6)
learningPlot <- ggplot(LearnCurves.long,aes(y=Reward,x=Trial,color=Bandit)) +
labs(title=name,x="Trial Number", y = name) +
geom_rect(aes(xmin=(nP1+.5), xmax=(nP1+nP2), ymin=-Inf, ymax=Inf),fill="grey",alpha=.1) +
geom_line(linetype = "solid")+
geom_point(size=1) +
scale_fill_viridis_c(option ="viridis")+
#scale_colour_manual(values = c("#cc79a7","#0070c0","#019e73"),name="Bandits",labels = c("Left","Down","Right")) +
theme(legend.position= c(1,1), legend.justification = c(1,1),text=element_text(size=15)) + theme(legend.position = 'none') +
annotate("text", x = c(nP1/2,nP2/2+nP1), y = c(1.1*max(data),1.1*max(data)), label = c("Phase 1", "Phase 2 \n (Sensory Stimulation)"),
color="Black", size=3 , angle=0, fontface="bold") +
theme_classic()
learningPlot
return(learningPlot)
}
table2df <- function(table,name){
mat <- matrix(NA, nrow = 3, ncol = 2)
#row if stim, col is reward
mat[3,1] <- table[1]
mat[3,2] <- table[2]
mat[2,1] <- table[3]
mat[2,2] <- table[4]
mat[1,1] <- table[5]
mat[1,2] <- table[6]
df <- data.frame(mat)
rownames(df) <- c("0.85","0.5","0.15")
colnames(df) <- c("Low","High")
df2 <- df %>% mutate(fixRewards = df$Low + df$High) %>% select(fixRewards) %>% rownames_to_column() %>% gather(fixedRewards, value, -rowname)
head(df2)
df2$value <- df2$value - 1/nrow(df2)
print(df2)
#Alternative frequency plot
plotFig <- ggplot(df2, aes(x=rowname, y=value)) +
stat_summary(fun.y = mean, geom='bar', position =  position_dodge(width=0.8),alpha = 0.8, color = '#40B0A6', width = 0.8) +
#stat_summary(fun.data = mean_se, geom= 'errorbar', color = 'black', width = .2, position =  position_dodge(width=0.8))+
theme_classic()+
#facet_wrap(~Conditions, nrow =1)+
xlab("p(stim)")+
geom_hline(yintercept = 0,linetype=1)+
ylab("p(choice)-p(chance)")+
ggtitle(name)+
scale_fill_manual(values =c("#E69F00", "#009E73"), name = '')+
scale_color_manual(values =c("#E69F00", "#009E73"), name = '')+
theme(legend.justification = c(1, 1), legend.box.margin=margin(c(0,0,0,0)),
legend.position = "none",#c(1, 1.1),
legend.key.height = unit(0.3, 'cm'),legend.key.width = unit(0.3, 'cm'),
legend.background=element_blank(), strip.background = element_blank(),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16)#, legend.title = "Reward level",
)
plotFig
return(plotFig)
}
g1 <- table2df(lowOmega.Freq, "Low Omega")
g2 <- table2df(highOmega.Freq, "High Omega")
g3 <- table2df(lowTheta.Freq, "Low Theta")
g4 <- table2df(highTheta.Freq, "High Theta")
grid.arrange(g1,g2,g3,g4,ncol=4)
table2df <- function(table,name){
mat <- matrix(NA, nrow = 3, ncol = 2)
#row if stim, col is reward
mat[3,1] <- table[1]
mat[3,2] <- table[2]
mat[2,1] <- table[3]
mat[2,2] <- table[4]
mat[1,1] <- table[5]
mat[1,2] <- table[6]
df <- data.frame(mat)
rownames(df) <- c("0.85","0.5","0.15")
colnames(df) <- c("Low","High")
df2 <- df %>% mutate(fixRewards = df$Low + df$High) %>% select(fixRewards) %>% rownames_to_column() %>% gather(fixedRewards, value, -rowname)
head(df2)
df2$value <- df2$value - 1/nrow(df2)
print(df2)
#Alternative frequency plot
plotFig <- ggplot(df2, aes(x=rowname, y=value)) +
stat_summary(fun.y = mean, geom='bar', position =  position_dodge(width=0.8),alpha = 0.8, fill = '#40B0A6', width = 0.8) +
#stat_summary(fun.data = mean_se, geom= 'errorbar', color = 'black', width = .2, position =  position_dodge(width=0.8))+
theme_classic()+
#facet_wrap(~Conditions, nrow =1)+
xlab("p(stim)")+
geom_hline(yintercept = 0,linetype=1)+
ylab("p(choice)-p(chance)")+
ggtitle(name)+
scale_fill_manual(values =c("#E69F00", "#009E73"), name = '')+
scale_color_manual(values =c("#E69F00", "#009E73"), name = '')+
theme(legend.justification = c(1, 1), legend.box.margin=margin(c(0,0,0,0)),
legend.position = "none",#c(1, 1.1),
legend.key.height = unit(0.3, 'cm'),legend.key.width = unit(0.3, 'cm'),
legend.background=element_blank(), strip.background = element_blank(),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16)#, legend.title = "Reward level",
)
plotFig
return(plotFig)
}
g1 <- table2df(lowOmega.Freq, "Low Omega")
g2 <- table2df(highOmega.Freq, "High Omega")
g3 <- table2df(lowTheta.Freq, "Low Theta")
g4 <- table2df(highTheta.Freq, "High Theta")
grid.arrange(g1,g2,g3,g4,ncol=4)
#grid.arrange(g1,g2,g3,g4,ncol=4)
grid.arrange(
arrangeGrob(g1,g2,g3,g4, ncol = 4),
bottom = textGrob("Common X-axis Label", gp = gpar(fontsize = 14)),
left = textGrob("Common Y-axis Label", rot = 90, gp = gpar(fontsize = 14))
)
packages <- c("plyr", 'dplyr','tidyverse',  "ggplot2", 'pander', 'emmeans','sjPlot', 'lmerTest', 'data.table', "ggbeeswarm",
'lmerTest',  'brms', 'BayesFactor', "gridExtra", "lsr",'ggridges','cowplot','entropy','zoo','Hmisc',
'DescTools', 'magrittr', 'purrr', 'forcats', 'modelr', 'tidybayes', 'rstan' , 'loo', 'R.matlab','ggpubr','gridExtra','grid')
invisible(lapply(packages, require, character.only = TRUE))
#grid.arrange(g1,g2,g3,g4,ncol=4)
grid.arrange(
arrangeGrob(g1,g2,g3,g4, ncol = 4),
bottom = textGrob("Common X-axis Label", gp = gpar(fontsize = 14)),
left = textGrob("Common Y-axis Label", rot = 90, gp = gpar(fontsize = 14))
)
#grid.arrange(g1,g2,g3,g4,ncol=4)
grid.arrange(
arrangeGrob(g1,g2,g3,g4, ncol = 4),
bottom = textGrob("p(stim)", gp = gpar(fontsize = 14)),
left = textGrob("p(choice)-p(chance)", rot = 90, gp = gpar(fontsize = 14))
)
table2df <- function(table,name){
mat <- matrix(NA, nrow = 3, ncol = 2)
#row if stim, col is reward
mat[3,1] <- table[1]
mat[3,2] <- table[2]
mat[2,1] <- table[3]
mat[2,2] <- table[4]
mat[1,1] <- table[5]
mat[1,2] <- table[6]
df <- data.frame(mat)
rownames(df) <- c("0.85","0.5","0.15")
colnames(df) <- c("Low","High")
df2 <- df %>% mutate(fixRewards = df$Low + df$High) %>% select(fixRewards) %>% rownames_to_column() %>% gather(fixedRewards, value, -rowname)
head(df2)
df2$value <- df2$value - 1/nrow(df2)
print(df2)
#Alternative frequency plot
plotFig <- ggplot(df2, aes(x=rowname, y=value)) +
stat_summary(fun.y = mean, geom='bar', position =  position_dodge(width=0.8),alpha = 0.8, fill = '#40B0A6', width = 0.8) +
#stat_summary(fun.data = mean_se, geom= 'errorbar', color = 'black', width = .2, position =  position_dodge(width=0.8))+
theme_classic()+
#facet_wrap(~Conditions, nrow =1)+
#xlab("p(stim)")+
geom_hline(yintercept = 0,linetype=1)+
#ylab("p(choice)-p(chance)")+
ggtitle(name)+
scale_fill_manual(values =c("#E69F00", "#009E73"), name = '')+
scale_color_manual(values =c("#E69F00", "#009E73"), name = '')+
theme(legend.justification = c(1, 1), legend.box.margin=margin(c(0,0,0,0)),
legend.position = "none",#c(1, 1.1),
legend.key.height = unit(0.3, 'cm'),legend.key.width = unit(0.3, 'cm'),
legend.background=element_blank(), strip.background = element_blank(),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16)#, legend.title = "Reward level",
)
plotFig
return(plotFig)
}
g1 <- table2df(lowOmega.Freq, "Low Omega")
g2 <- table2df(highOmega.Freq, "High Omega")
g3 <- table2df(lowTheta.Freq, "Low Theta")
g4 <- table2df(highTheta.Freq, "High Theta")
#grid.arrange(g1,g2,g3,g4,ncol=4)
grid.arrange(
arrangeGrob(g1,g2,g3,g4, ncol = 4),
bottom = textGrob("p(stim)", gp = gpar(fontsize = 14)),
left = textGrob("p(choice)-p(chance)", rot = 90, gp = gpar(fontsize = 14))
)
#Alternative frequency plot
plotFig <- ggplot(df2, aes(x=rowname, y=value)) +
stat_summary(fun.y = mean, geom='bar', position =  position_dodge(width=0.8),alpha = 0.8, fill = '#40B0A6', width = 0.8) +
#stat_summary(fun.data = mean_se, geom= 'errorbar', color = 'black', width = .2, position =  position_dodge(width=0.8))+
theme_classic()+
#facet_wrap(~Conditions, nrow =1)+
xlab(element_blank())+
geom_hline(yintercept = 0,linetype=1)+
#ylab("p(choice)-p(chance)")+
ggtitle(name)+
scale_fill_manual(values =c("#E69F00", "#009E73"), name = '')+
scale_color_manual(values =c("#E69F00", "#009E73"), name = '')+
theme(legend.justification = c(1, 1), legend.box.margin=margin(c(0,0,0,0)),
legend.position = "none",#c(1, 1.1),
legend.key.height = unit(0.3, 'cm'),legend.key.width = unit(0.3, 'cm'),
legend.background=element_blank(), strip.background = element_blank(),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16)#, legend.title = "Reward level",
)
plotFig
table2df <- function(table,name){
mat <- matrix(NA, nrow = 3, ncol = 2)
#row if stim, col is reward
mat[3,1] <- table[1]
mat[3,2] <- table[2]
mat[2,1] <- table[3]
mat[2,2] <- table[4]
mat[1,1] <- table[5]
mat[1,2] <- table[6]
df <- data.frame(mat)
rownames(df) <- c("0.85","0.5","0.15")
colnames(df) <- c("Low","High")
df2 <- df %>% mutate(fixRewards = df$Low + df$High) %>% select(fixRewards) %>% rownames_to_column() %>% gather(fixedRewards, value, -rowname)
head(df2)
df2$value <- df2$value - 1/nrow(df2)
print(df2)
#Alternative frequency plot
plotFig <- ggplot(df2, aes(x=rowname, y=value)) +
stat_summary(fun.y = mean, geom='bar', position =  position_dodge(width=0.8),alpha = 0.8, fill = '#40B0A6', width = 0.8) +
#stat_summary(fun.data = mean_se, geom= 'errorbar', color = 'black', width = .2, position =  position_dodge(width=0.8))+
theme_classic()+
#facet_wrap(~Conditions, nrow =1)+
xlab(element_blank())+
geom_hline(yintercept = 0,linetype=1)+
#ylab("p(choice)-p(chance)")+
ggtitle(name)+
scale_fill_manual(values =c("#E69F00", "#009E73"), name = '')+
scale_color_manual(values =c("#E69F00", "#009E73"), name = '')+
theme(legend.justification = c(1, 1), legend.box.margin=margin(c(0,0,0,0)),
legend.position = "none",#c(1, 1.1),
legend.key.height = unit(0.3, 'cm'),legend.key.width = unit(0.3, 'cm'),
legend.background=element_blank(), strip.background = element_blank(),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16)#, legend.title = "Reward level",
)
plotFig
return(plotFig)
}
g1 <- table2df(lowOmega.Freq, "Low Omega")
g2 <- table2df(highOmega.Freq, "High Omega")
g3 <- table2df(lowTheta.Freq, "Low Theta")
g4 <- table2df(highTheta.Freq, "High Theta")
#grid.arrange(g1,g2,g3,g4,ncol=4)
grid.arrange(
arrangeGrob(g1,g2,g3,g4, ncol = 4),
bottom = textGrob("p(stim)", gp = gpar(fontsize = 14)),
left = textGrob("p(choice)-p(chance)", rot = 90, gp = gpar(fontsize = 14))
)
packages <- c("plyr", 'dplyr','tidyverse',  "ggplot2", 'pander', 'emmeans','sjPlot', 'lmerTest', 'data.table', "ggbeeswarm",
'lmerTest',  'brms', 'BayesFactor', "gridExtra", "lsr",'ggridges','cowplot','entropy','zoo','Hmisc',
'DescTools', 'magrittr', 'purrr', 'forcats', 'modelr', 'tidybayes', 'rstan' , 'loo', 'R.matlab','ggpubr','gridExtra','patchwork')
invisible(lapply(packages, require, character.only = TRUE))
#grid.arrange(g1,g2,g3,g4,ncol=4)
tmp <- g1+g2+g3+g4
tmp
table2df <- function(table,name){
mat <- matrix(NA, nrow = 3, ncol = 2)
#row if stim, col is reward
mat[3,1] <- table[1]
mat[3,2] <- table[2]
mat[2,1] <- table[3]
mat[2,2] <- table[4]
mat[1,1] <- table[5]
mat[1,2] <- table[6]
df <- data.frame(mat)
rownames(df) <- c("0.85","0.5","0.15")
colnames(df) <- c("Low","High")
df2 <- df %>% mutate(fixRewards = df$Low + df$High) %>% select(fixRewards) %>% rownames_to_column() %>% gather(fixedRewards, value, -rowname)
head(df2)
df2$value <- df2$value - 1/nrow(df2)
print(df2)
#Alternative frequency plot
plotFig <- ggplot(df2, aes(x=rowname, y=value)) +
stat_summary(fun.y = mean, geom='bar', position =  position_dodge(width=0.8),alpha = 0.8, fill = '#40B0A6', width = 0.8) +
#stat_summary(fun.data = mean_se, geom= 'errorbar', color = 'black', width = .2, position =  position_dodge(width=0.8))+
theme_classic()+
#facet_wrap(~Conditions, nrow =1)+
xlab("p(stim)")+
geom_hline(yintercept = 0,linetype=1)+
ylab("p(choice)-p(chance)")+
ggtitle(name)+
scale_fill_manual(values =c("#E69F00", "#009E73"), name = '')+
scale_color_manual(values =c("#E69F00", "#009E73"), name = '')+
theme(legend.justification = c(1, 1), legend.box.margin=margin(c(0,0,0,0)),
legend.position = "none",#c(1, 1.1),
legend.key.height = unit(0.3, 'cm'),legend.key.width = unit(0.3, 'cm'),
legend.background=element_blank(), strip.background = element_blank(),
axis.title.x = element_text(size = 16),
axis.title.y = element_text(size = 16)#, legend.title = "Reward level",
)
plotFig
return(plotFig)
}
g1 <- table2df(lowOmega.Freq, "Low Omega")
g2 <- table2df(highOmega.Freq, "High Omega")
g3 <- table2df(lowTheta.Freq, "Low Theta")
g4 <- table2df(highTheta.Freq, "High Theta")
#grid.arrange(g1,g2,g3,g4,ncol=4)
tmp <- g1+g2+g3+g4
tmp
#grid.arrange(g1,g2,g3,g4,ncol=4)
tmp <- g1+g2+g3+g4 + plot_layout(axis_titles = "collect")
tmp
#grid.arrange(g1,g2,g3,g4,ncol=4)
tmp <- g1+g2+g3+g4 + plot_layout(nrow = 4,axis_titles = "collect")
tmp
#grid.arrange(g1,g2,g3,g4,ncol=4)
tmp <- g1+g2+g3+g4 + plot_layout(ncol = 4,axis_titles = "collect")
tmp
